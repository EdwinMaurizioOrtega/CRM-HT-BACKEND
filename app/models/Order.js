//Sentecia para crear una nueva orden.
import {format} from "date-fns";

export const SqlInsertOrder = () => {
    return `INSERT INTO GRUPO_EMPRESARIAL_HT.HT_ORDERS (
      CLIENTEID,
      ESTADO,
      FECHA,
      FECHAACTUALIZACION,
      FECHACREACION,
      FORMADEPAGO,
      GUARDADO,
      HORA,
      LATITUD,
      LONGITUD,
      OBSERVACIONES,
      ONLINE,
      SUBTOTAL,
      TOTAL,
      TOTALIVA,
      USUARIOAACTUALIZACION,
      VENDEDOR,
      VENDEDORID,
      LOCALCLIENTE_ID,
      EMPRESA,
      FECHAFACTURACION,
      NUMEROFACTURAE4,
      NUMEROFACTURAHIPERTRONICS,
      NUMEROFACTURALIDENAR,
      NUMEROGUIA,
      OBSERVACIONESB,
      NOTACLIENTE,
      USUARIOAPROBO,
      PLANPAGOSTOMEBAMBA_ID,
      APLICACIONORIGEN,
      COMENTARIOENTREGA,
      FECHAENTREGA,
      NOMBREUSUARIOENTREGA,
      USUARIOENTREGA_ID,
      FECHAENTREGASOLICITADA,
      IDUSUARIOENTREGARA,
      NOMBREUSUARIOENTREGARA,
      COURIER,
      USUARIOENTREGABODEGA_ID,
      BODEGA,
      PEDIDOCATEGORIAPROPIA,
      IMAGENA,
      IMAGENB,
      IMAGEN,
      IMAGENGUIA,
      FECHAAPROBO,
      DOCNUM
  ) VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?
  )`;
};

const dateAll = format(new Date(), 'dd-MM-yyyy HH:mm:ss');


export const ParamsOrder = (body) => [
    body.checkoutData.billing.ID,
    6,
    dateAll,
    body.FECHAACTUALIZACION || '',
    dateAll,
    body.FORMADEPAGO || '',
    body.GUARDADO || 1,
    body.HORA || '',
    body.LATITUD || 0.00,
    body.LONGITUD || 0.00,
    body.OBSERVACIONES || '',
    body.ONLINE || true,
    body.SUBTOTAL || 0.00,
    body.checkoutData.total || 0.00,
    body.TOTALIVA || 0.00,
    body.USUARIOAACTUALIZACION || '',
    body.checkoutUser.DISPLAYNAME || '',
    body.checkoutUser.ID || 0,
    body.checkoutData.billing.ID || 0,
    body.EMPRESA || '',
    body.FECHAFACTURACION || '',
    body.NUMEROFACTURAE4 || '',
    body.NUMEROFACTURAHIPERTRONICS || '',
    body.NUMEROFACTURALIDENAR || '',
    body.NUMEROGUIA || '',
    body.OBSERVACIONESB || '',
    body.NOTACLIENTE || '',
    body.USUARIOAPROBO || '',
    body.PLANPAGOSTOMEBAMBA_ID || 0,
    body.APLICACIONORIGEN || '',
    body.COMENTARIOENTREGA || '',
    body.FECHAENTREGA || '',
    body.NOMBREUSUARIOENTREGA || '',
    body.USUARIOENTREGA_ID || 0,
    body.FECHAENTREGASOLICITADA || '',
    body.IDUSUARIOENTREGARA || 0,
    body.NOMBREUSUARIOENTREGARA || '',
    body.COURIER || '',
    body.USUARIOENTREGABODEGA_ID || 0,
    body.checkoutData.warehouse || 0,
    body.PEDIDOCATEGORIAPROPIA || 0,
    body.IMAGENA || '',
    body.IMAGENB || '',
    body.IMAGEN || '',
    body.IMAGENGUIA || '',
    body.FECHAAPROBO || '',
    body.DOCNUM || 0];

// Order Detail - Sql
export const SqlInsertDetailOrder = () => {
    return `INSERT INTO GRUPO_EMPRESARIAL_HT.HT_ORDERS_DETAIL (
      CANTIDAD,
      ESTADO,
      FACTURAID,
      FECHAACTUALIZACION,
      FECHACREACION,
      OBSERVACIONES,
      PRECIOUNITARIOVENTA,
      PRODUCTOID,
      TIPOPRECIO,
      TOTAL,
      USUARIOAACTUALIZACION,
      PRODUCTO_ID,
      COMENTARIOPRECIO,
      COMENTARIOPRODUCTO,
      COMENTARIO,
      COMENTARIOSTOCK,
      EMPRESA,
      ENTREGADO,
      TIENESTOCK,
      NUEVACANTIDAD,
      PRECIOCOSTO,
      URL,
      PROCESADO,
      DISCOUNTPERCENTSAP,
      ID_ORDER
  ) VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?
  )`;
};
// Order Detail - Params
export const ParamsDetailOrder = (body, formaPago, lastIdOrder) => [
    //Cantidad artículos
    body.quantity || 0,
    body.ESTADO || 0,
    body.FACTURAID || 0,
    body.FECHAACTUALIZACION || '',
    dateAll,
    body.OBSERVACIONES || '',
    body.PRECIOUNITARIOVENTA || 0.00,
    body.CODIGO || '',
    formaPago,
    // El total.
    body.subtotal || 0.00,
    body.USUARIOAACTUALIZACION || '',
    // Código del producto
    body.CODIGO || '',
    body.COMENTARIOPRECIO || '',
    body.COMENTARIOPRODUCTO || '',
    body.COMENTARIO || '',
    body.COMENTARIOSTOCK || '',
    'LID',
    body.ENTREGADO || false,
    body.TIENESTOCK || 0,
    body.NUEVACANTIDAD || 0,
    body.PRECIOCOSTO || 0.00,
    body.URL || '',
    body.PROCESADO || true,
    body.DISCOUNTPERCENTSAP || 0,
    lastIdOrder];


export const ParamsEnvioDetailOrder = (totalEnvio, ivaEnvio, subTotalEnvio, codProducto, formaPago, lastIdOrder) => [
    //Cantidad artículos
    1,
    0,
    0,
    '',
    dateAll,
    '',
    0.00,
    codProducto,
    formaPago || '',
    // El total.
    subTotalEnvio || 0.00,
    '',
    // Código del producto
    codProducto || '',
    '',
    '',
    '',
    '',
    'LID',
    false,
    0,
    0,
    0.00,
    '',
    true,
    0,
    lastIdOrder];


// export const QuerySearch = () => `SELECT U.*
// FROM GRUPO_EMPRESARIAL_HT.HT_ORDERS AS U
// JOIN (SELECT CURRENT_IDENTITY_VALUE() AS ID FROM DUMMY) AS I
// ON U.ID = I.ID;`;

